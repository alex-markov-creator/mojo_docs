# ===----------------------------------------------------------------------=== #
#--- –í–≤–µ–¥–µ–Ω–∏–µ –≤ Mojo
# ===----------------------------------------------------------------------=== #
#RUN python and mojo functions
def main():
    print("---Mojo functions---")
    mojo()
    print("---Pyhon functions---")
    python_func()
    print("---Variables---")
    do_math(3)
    add_one(5)
    print("---Struct---")
    use_mypair()
    print("---Trait---")
    use_trait_function()
    print("---Parametrization---")
    call_repeat()
    print("---Integration Python---")
    #use_numpy()

###–§—É–Ω–∫—Ü–∏–∏

fn set_fire(owned text: String) -> String:
    # Mojo –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤–∞–º —É–∫–∞–∑–∞—Ç—å –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∞—Ä–≥—É–º–µ–Ω—Ç–∞, –¥–æ–ª–∂–µ–Ω –ª–∏ –æ–Ω –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è
    # –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é (–∫–∞–∫ owned) –∏–ª–∏ –¥–æ–ª–∂–µ–Ω –ª–∏ –æ–Ω –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å—Å—è –ø–æ —Å—Å—ã–ª–∫–µ 
    # (–∫–∞–∫ borrowed –¥–ª—è –Ω–µ–∏–∑–º–µ–Ω—è–µ–º–æ–π —Å—Å—ã–ª–∫–∏ –∏–ª–∏ –∫–∞–∫ inout –¥–ª—è –∏–∑–º–µ–Ω—è–µ–º–æ–π —Å—Å—ã–ª–∫–∏)
    text += "üî•"
    return text

fn mojo():
    var x: String = "mojo"
    var y = set_fire(x)
    print(x)
    print(y)

def python_func():
    # CHECK: Hello Mojo üî•!
    print("Hello Mojo üî•!")
    for x in range(9, 0, -3):
        print(x)

#run mojo functions
#fn main():
#    mojo()

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
def do_math(x):
    var y = x + x
    y = y * y
    print(y)

def add_one(x):
    var y: Int = 1
    print(x + y)

# –°—Ç—Ä—É–∫—Ç—É—Ä—ã
struct MyPair:
    var first: Int
    var second: Int

    fn __init__(inout self, first: Int, second: Int):
        self.first = first
        self.second = second

    fn dump(self):
        print(self.first, self.second)

fn use_mypair():
    var mine = MyPair(2,4)
    mine.dump()

# –¢—Ä–µ–π—Ç—ã(–ü—Ä–∏–∑–Ω–∞–∫–∏)
"""
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–∏—Å–∞—Ç—å —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç
–ø—Ä–∏–Ω–∏–º–∞—Ç—å –ª—é–±–æ–π —Ç–∏–ø, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π –ø—Ä–∏–∑–Ω–∞–∫—É, –∞ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—Ç—å —Ç–æ–ª—å–∫–æ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Ç–∏–ø—ã.
"""
trait SomeTrait:
    """ 
    –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–∑–Ω–∞–∫.
    """
    fn required_method(self, x: Int):
        pass

@value
struct SomeStruct(SomeTrait):
    """
    –°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∞—è –ø—Ä–∏–∑–Ω–∞–∫—É.
    """
    fn required_method(self, x: Int):
        print("hello traits", x)

fn fun_with_traits[T: SomeTrait](x: T):
    x.required_method(42)

fn use_trait_function():
    var thing = SomeStruct()
    fun_with_traits(thing)

# –ü–∞—Ä–∞–º–µ—Ç—Ä–∏–∑–∞—Ü–∏—è
"""
–í Mojo –ø–∞—Ä–∞–º–µ—Ç—Ä - —ç—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –≤—Ä–µ–º–µ–Ω–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏, –∫–æ—Ç–æ—Ä–∞—è —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è
–∫–æ–Ω—Å—Ç–∞–Ω—Ç–æ–π –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏ –æ–±—ä—è–≤–ª—è–µ—Ç—Å—è –≤ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö –≤ —Ñ—É–Ω–∫—Ü–∏–∏
–∏–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ. –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å –º–µ—Ç–∞–ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –≤–æ –≤—Ä–µ–º—è
–∫–æ–º–ø–∏–ª—è—Ü–∏–∏, —á—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–ª–∏ –∏–∑–º–µ–Ω—è—Ç—å
–∫–æ–¥ –≤–æ –≤—Ä–µ–º—è –∫–æ–º–ø–∏–ª—è—Ü–∏–∏. –ú–Ω–æ–≥–∏–µ –¥—Ä—É–≥–∏–µ —è–∑—ã–∫–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç "–ø–∞—Ä–∞–º–µ—Ç—Ä" –∏ "–∞—Ä–≥—É–º–µ–Ω—Ç"
–∫–∞–∫ –≤–∑–∞–∏–º–æ–∑–∞–º–µ–Ω—è–µ–º—ã–µ, –ø–æ—ç—Ç–æ–º—É –∏–º–µ–π—Ç–µ –≤ –≤–∏–¥—É, —á—Ç–æ –∫–æ–≥–¥–∞ –º—ã –≥–æ–≤–æ—Ä–∏–º —Ç–∞–∫–∏–µ –≤–µ—â–∏,
–∫–∞–∫ "–ø–∞—Ä–∞–º–µ—Ç—Ä" –∏ "–ø–∞—Ä–∞–º–µ—Ç—Ä–∏—á–µ—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è", –º—ã –≥–æ–≤–æ—Ä–∏–º –æ–± —ç—Ç–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö
–≤—Ä–µ–º–µ–Ω–∏ –∫–æ–º–ø–∏–ª—è—Ü–∏–∏. –ü—Ä–∏–Ω–∏–º–∞—è –≤–æ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ "–∞—Ä–≥—É–º–µ–Ω—Ç" —Ñ—É–Ω–∫—Ü–∏–∏ - —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ
–≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä–æ–µ –æ–±—ä—è–≤–ª—è–µ—Ç—Å—è –≤ –∫—Ä—É–≥–ª—ã—Ö —Å–∫–æ–±–∫–∞—Ö.
"""
fn repeat[count: Int](msg: String):
    for i in range(count):
        print(msg)

fn call_repeat():
    """
    –£–∫–∞–∑—ã–≤–∞—è count –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞, –∫–æ–º–ø–∏–ª—è—Ç–æ—Ä Mojo –º–æ–∂–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å
    —Ñ—É–Ω–∫—Ü–∏—é , –ø–æ—Å–∫–æ–ª—å–∫—É —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ –Ω–µ –∏–∑–º–µ–Ω—è–µ—Ç—Å—è
    –≤–æ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è.
    """
    repeat[3]("Hello")
    # Prints "Hello 3 times"    

# –ë–ª–æ–∫–∏ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
def loop():
    """
    –û—Ç—Å—Ç—É–ø—ã.
    """
    for x in range(5):
        if x % 2 == 0:
            print(x)

def print_line():
    """
    –í—Å–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∫–æ–¥–∞ –≤ Mojo –∑–∞–∫–∞–Ω—á–∏–≤–∞—é—Ç—Å—è —Å–∏–º–≤–æ–ª–æ–º –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏. 
    –û–¥–Ω–∞–∫–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –º–æ–≥—É—Ç –∑–∞–Ω–∏–º–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫, –µ—Å–ª–∏ –≤—ã —Å–¥–µ–ª–∞–µ—Ç–µ
    –æ—Ç—Å—Ç—É–ø –≤ —Å–ª–µ–¥—É—é—â–∏—Ö —Å—Ç—Ä–æ–∫–∞—Ö. –ù–∞–ø—Ä–∏–º–µ—Ä, —ç—Ç–∞ –¥–ª–∏–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ –∑–∞–Ω–∏–º–∞–µ—Ç –¥–≤–µ —Å—Ç—Ä–æ–∫–∏.
    """
    long_text = "This is a long line of text that is a lot easier to read if"
                " it is broken up across two lines instead of one long line."
    print(long_text)

# –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –∫–æ–¥—É —Å–º. –≤—ã—à–µ

# –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Python
from python import Python

fn use_numpy() raises:
    var np = Python.import_module("numpy")
    var ar = np.arange(15).reshape(3, 5)
    print(ar)
    print(ar.shape)